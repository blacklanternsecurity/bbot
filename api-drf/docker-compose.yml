version: '3.3'

networks: 
  bbot_net:

volumes: 
  db-data:
  neo4j-data:

services:
  react:
    build: 
      context: './react'
    working_dir: '/app'
    stdin_open: true
    volumes: 
      - ./react:/app
    environment:
      HOST: react
      NODE_PATH: "/app/node_modules/"
    command: "npm start"
    expose: 
      - 3000
    networks:
      bbot_net:

  django:
    build: 
      context: './django'
    working_dir: '/app'
    command: bash -c "
      pip install psutil && 
      ./manage.py makemigrations && 
      ./manage.py makemigrations api && 
      ./manage.py migrate &&
      uvicorn api.asgi:application --host 0.0.0.0 --port 8000 --reload --lifespan off --no-access-log"
#     ./manage.py runserver 0.0.0.0:8000"
#     gunicorn --bind 0.0.0.0:8000 api.asgi -w 1 -k uvicorn.workers.UvicornWorker --reload --timeout 60"
    environment:
      COLORTERM: truecolor
      TERM: xterm-256color
      DJANGO_SETTINGS_MODULE: api.settings
      NEO4J_URL: "bolt://neo4j:7687"
      NEO4J_USER: "neo4j"
      NEO4J_PASS: "igshoojlot?ojupofHelrirrOonVish9"
    volumes:
      - ./django:/app
      - ../pyproject.toml:/opt/bbot/pyproject.toml
      - ../bbot:/app/bbot
    networks:
      bbot_net:
    depends_on:
      - postgres
      - neo4j
    expose:
      - 8000

  postgres:
    environment:
      PGDATA: /var/lib/postgresql/data/bbot_db
      POSTGRES_DB: bbot_db
      POSTGRES_PASSWORD: 'f~DyV3YSJTvr3OUYH+)qDJSa6D~<86|P'
      POSTGRES_USER: bbot_user
    image: postgres
    networks:
      bbot_net:
    restart: always
    volumes:
      - ./scripts/db:/docker-entrypoint-initdb.d:ro
      - db-data:/var/lib/postgresql/data:rw

  neo4j:
    image: neo4j:4.0
    networks:
      bbot_net:
    restart: always
    volumes:
      - neo4j-data:/data
      - ./neo4j/plugins:/plugins
      - ./neo4j/import:/var/lib/neo4j/import
    environment:
      NEO4J_apoc_export_file_enabled: true
      NEO4J_apoc_import_file_enabled: true
      NEO4J_apoc_import_file_use__neo4j__config: true
      NEO4JLABS_PLUGINS: '["apoc"]'
      NEO4J_AUTH: neo4j/igshoojlot?ojupofHelrirrOonVish9
    ports:
      - 7474:7474
      - 7687:7687

  nginx:
    restart: always
    image: nginx
    volumes:
#     - ./nginx/ssl/self.cert:/etc/nginx/ssl/self.cert:ro
#     - ./nginx/ssl/self-ssl.key:/etc/nginx/ssl/self-ssl.key:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/site.template:/etc/nginx/conf.d/default.conf:ro
      - ./nginx/proxy.template:/etc/nginx/proxy.conf:ro
    ports:
      - 80:80
    links:
      - django
      - react
    networks:
      bbot_net:
    command: /bin/bash -c "nginx-debug -g 'daemon off;'"
    dns:
      - 127.0.0.11
